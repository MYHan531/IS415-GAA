---
title: "In-Class Exercise 4: Spatio-Temporal Point Patterns Analysis"
title-block-banner: true
author: "Han Ming Yan"
date: 2024-09-09
date-modified: "last-modified"
format:
  html:
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: true
    number-depth: 3
    code-copy: true
    embed-resources: true
    lightbox: true
    lang: en
abstract: |
  This exercise focuses on methods for analysing 1st and 2nd Order Spatial Point Patterns. We will cover techniques and tools necessary for conducting this analysis, with practical examples.
keywords: ["Spatial Analysis", "Point Patterns", "First-Order Analysis", "Second-Order Analysis", "Monte Carlo simulation", "Myanmar", "Myanmar Civil War Crisis"]
---

# Import Packages

```{r}
# to add pipe %>%: ctrl + shift + M
# to add <-: alt + -
```

```{r}
pacman::p_load(tmap, sf, tidyverse, raster, spatstat, sp, sparr)
```

# Import Data

```{r}
#| eval: false
kdb <- st_read(dsn="data/rawdata", layer = "Kepulauan_Bangka_Belitung")
```

## View the Data

```{r}
kdb
```

```{r}
kdb_sf <- st_read(dsn="data/rawdata", layer = "Kepulauan_Bangka_Belitung") %>%
  st_union() %>%
  st_zm(drop = TRUE, what = "ZM") %>% 
  st_transform(crs = 32748)
```

## Converting to OWIN format

`owin` stands for **"observation window"**,a spatial window or region of interest where spatial point patterns are observed or analyzed.

```{r}
kdb_owin <- as.owin(kdb_sf)
kdb_owin
paste("kdb_owin class type:", class(kdb_owin))
```

# Importing and Preparing Forest Fire Data

## As a data frame

```{r}
fire <- read.csv("data/rawdata/forestfires.csv")
```

## As sf data frame

```{r}
fire_sf <- utils::read.csv("data/rawdata/forestfires.csv") %>% 
  sf::st_as_sf(coords = c("longitude", "latitude"),
           crs = 4326) %>% 
  sf::st_transform(crs = 32748)
```

```{r}
fire_sf
```

convert data type of acq_date to numeric

```{r}
fire_sf <- fire_sf %>% 
  dplyr::mutate(DayofYear = lubridate::yday(acq_date)) %>% 
  dplyr::mutate(Month_num = lubridate::month(acq_date)) %>% 
  dplyr::mutate(Month_fac = lubridate::month(acq_date,
                           label = TRUE,
                           abbr = FALSE))
```

# Visualising the Fire Points

## Overall plot

::: panel-tabset
## DIY

Prepare a point symbol map showing the distribution of fire points.

## CODE

note: overview/polygon plot first, then lines, then the dots/bubbles.

```{r}
tmap::tm_shape(kdb_sf) + # plot the map of myanmar outline first
  tmap::tm_polygons() +
tmap::tm_shape(fire_sf) + #plot the fire points using dots
  tmap::tm_dots()

```
:::

## Visualising geographic distribution of forest fires by month

```{r}
tmap::tm_shape(kdb_sf) + 
  tmap::tm_polygons() + 
tmap::tm_shape(fire_sf) +
  tmap::tm_dots(size = 0.1) +
  #facets is small multiples
tmap::tm_facets(by="Month_fac",
          free.coords = FALSE,
          drop.units = TRUE)
```

## computing STKDE by Month

```{r}
fire_month <- fire_sf %>% 
  dplyr::select(Month_num)
```

### Creating ppp

note: ppp format only accept numeric format

```{r}
fire_month_ppp <- as.ppp(fire_month)
fire_month_ppp
```

Show the summary

```{r}
summary(fire_month_ppp)
```

### Including OWIN object

ccombine origin_am_ppp and am_owin objects into one, note the class will remain as ppp

```{r}
fire_month_owin <- fire_month_ppp[kdb_owin] #get the layers needed for the analysis
summary(fire_month_owin)
class(fire_month_owin)
```

Plot the fire month owin data

```{r}
plot(fire_month_owin)
```

### Computing Spatio-temporal KDE

spattemp.density() of the sparr package is used to compute the STKDE

```{r}
st_kde <- spattemp.density(fire_month_owin)
summary(st_kde)

```

### Plotting the spatio-temporal KDE Object

we will plot the KDE Object from July onwards, reason is because the fire points tend to happen in the late summer period from July to December

```{r}
tims <- c(7,8,9,10,11,12)
par(mfcol=c(2,3)) # 2 rows, 3 columns
for (i in tims) {
  plot(st_kde, i,
       override.par=FALSE,
       fix.range=TRUE,
       main=paste("KDE at month", i))
}
```

## computing STKDE by Day of Year

```{r}
tmap::tm_shape(kdb_sf) + 
  tmap::tm_polygons() + 
tmap::tm_shape(fire_sf) +
  tmap::tm_dots(size = 0.1) +
  #facets is small multiples
tmap::tm_facets(by="DayofYear",
          free.coords = FALSE,
          drop.units = TRUE)
```

```{r}
fire_doy <- fire_sf %>% 
  dplyr::select(DayofYear)
```

```{r}
fire_doy_ppp <- as.ppp(fire_doy)
fire_doy_ppp
summary(fire_month_ppp)
```

```{r}
fire_doy_owin <- fire_doy_ppp[kdb_owin] #get the layers needed for the analysis
summary(fire_doy_owin)
```

```{r}
plot(fire_doy_owin)
```

```{r}
st_kde2 <- spattemp.density(fire_doy_owin)
summary(st_kde2)
```

```{r}
tims <- c(7,8,9,10,11,12)
 # 2 rows, 3 columns
for (i in tims) {
  plot(st_kde, i,
       override.par=FALSE,
       fix.range=TRUE,
       main=paste("KDE at day", i))
}
```

## computing STKDE by Day of Year, improved method
