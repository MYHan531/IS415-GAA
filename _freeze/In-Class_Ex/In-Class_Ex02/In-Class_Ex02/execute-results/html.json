{
  "hash": "514640f365dd5a7b010540e28325243a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-Class Exercise 2: Thematic Mapping and GeoVisualisation with R\"\ntitle-block-banner: true\nauthor: \"Han Ming Yan\"\ndate: 2024-08-26\ndate-modified: \"last-modified\"\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    number-depth: 3\nexecute: \n  eval: true\n  echo: true\n  warning: true\n  freeze: true\n---\n\n\n## *Working with Master Plan Planning Sub-Zone Data*\n\n::: panel-tabset\n### The Task\n\n1.  Visit data.gov.sg and download Master Plan 2019 Subzone Boundary (No Sea) from the portal. You are required to download both kml files.\n\n2.  Move MPSZ-2019 shapefile provided for In-Class Exercise 1 folder on elearn to data sub-folder of In-Class_Ex02.\n\n3.  Write a code chunk to import Master Plan 2019 Subzone Boundary (No Sea) kml and MPSZ-2019 into sf simple feature data.frame.\n\n### To import shapefile\n\n\nThe code chunk below will be used to install and load these packages in RStudio.\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse)\n```\n:::\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\nThe code chunk below uses the *st_read()* function of **sf** package to import `MP14_SUBZONE_WEB_PL` shapefile into R as a simple feature data frame called `mpsz14_shp`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data\",\n                layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\myhan\\IS415-GAA\\In-Class_Ex\\In-Class_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n### To import kml\n\nThe code chunk below will be used to install and load these packages in RStudio.\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse)\n```\n:::\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\nThe code chunk imports kml file.\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' using driver `KML'\nWriting layer `MasterPlan2019SubzoneBoundaryNoSeaKML' to data source \n  `data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' using driver `KML'\nWriting 332 features with 6 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n:::\n\n### **Import Pre-School Shape**\n::: panel-tabset\n### Pre-School Shape\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool <- st_write(mpsz19_shp, \n                       \"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\",\n                       delete_dsn = TRUE) #incomplete\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' using driver `KML'\nWriting layer `MasterPlan2019SubzoneBoundaryNoSeaKML' to data source \n  `data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' using driver `KML'\nWriting 332 features with 6 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n:::\n\n\n### **Working with Population Data**\n::: panel-tabset\n### The Code\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- readr::read_csv(\"data/aspatial/respopagesextod2023.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n:::\n\n::: panel-tabset\n### Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata |>\n  dplyr::group_by(PA, SZ, AG) |>\n  dplyr::summarise(`POP`=sum(`Pop`)) |>\n  dplyr::ungroup() |>\n  tidyr::pivot_wider(names_from = AG,\n              values_from = POP\n              )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n:::\n\n::: panel-tabset\n### Data Processing\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[14])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+\nrowSums(.[15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n```\n:::\n\n\n### Mutate the code\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n```\n:::\n\n\n### LEFT_JOIN\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2023 <- left_join(popdata2023 ,mpsz19_shp,\n                          by = c(\"SZ\"=\"SUBZONE_N\"))\n\nwrite_rds(mpsz_pop2023, \"data/rds/mpszpop2023.rds\")\n```\n:::\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}